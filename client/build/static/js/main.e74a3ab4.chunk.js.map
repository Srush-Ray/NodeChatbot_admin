{"version":3,"sources":["Components/Dataservice/DataService.js","Components/ErrorComponent/ShowError.js","Components/AllQuestions/AllQuestions.js","Components/NewQA/NewQA.js","App.js","reportWebVitals.js","index.js"],"names":["getAllQuestions","a","axios","get","then","response","console","log","catch","err","message","deleteQuestion","data","post","getAllQueTypes","addNewQA","ShowError","props","state","errorText","text","className","role","this","type","data-dismiss","aria-label","aria-hidden","Component","AllQuestions","handleDelete","item","id","sendData","window","confirm","result","error","alert","setState","gotError","location","reload","allrows","loading","xmlns","width","height","fill","viewBox","fillRule","d","to","map","index","question","answer","viewed","satisfied","unsatisfied","onClick","NewQA","handleChange","event","preventDefault","target","name","value","handleSubmit","e","formData","FormData","queType","view","setTimeout","questypes","href","onSubmit","htmlFor","onChange","required","aria-describedby","placeholder","min","defaultValue","selected","disabled","typename","class","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e74a3ab4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getAllQuestions = async () => {\n  return await axios\n    .get(\"/api/all\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n\nexport const deleteQuestion = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/delete\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const getAllQueTypes = async () => {\n  return await axios\n    .get(\"/api/all/quetype\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const addNewQA = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/addnew\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n","import React, { Component } from \"react\";\n\nexport default class ShowError extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorText: this.props.text || \"\",\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"alert alert-warning alert-dismissible fade show\"\n        role=\"alert\"\n      >\n        <strong>{this.state.errorText}</strong>\n        <button\n          type=\"button\"\n          className=\"close\"\n          data-dismiss=\"alert\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { deleteQuestion, getAllQuestions } from \"../Dataservice/DataService\";\nimport ShowError from \"../ErrorComponent/ShowError\";\nimport \"./AllQuestion.css\";\nimport { Link } from \"react-router-dom\";\nexport default class AllQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allrows: [],\n      loading: true,\n      gotError: false,\n      text: \"\",\n    };\n  }\n  async componentDidMount() {\n    await getAllQuestions()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            text: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          console.log(result.data);\n          this.setState({\n            loading: false,\n          });\n          this.setState({\n            allrows: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  }\n  handleDelete = (item) => {\n    // e.preventDefault();\n    console.log(\"clicked\", item.id);\n    let sendData = {\n      id: item.id,\n    };\n\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      deleteQuestion(sendData)\n        .then((result) => {\n          console.log(result.data);\n          if (result.data.error) {\n            alert(result.data.error);\n          } else if (result.data.message) {\n            console.log(result);\n            alert(result.data.message);\n          }\n        })\n        .catch((error) => {\n          this.setState({\n            text: \"Nextwork Error\",\n          });\n          this.setState({\n            gotError: true,\n          });\n        });\n      window.location.reload();\n    }\n  };\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 offset-md-0 mt-5\">\n              <div className=\"jumbotron\">\n                <h1 className=\"display-4 text-left\">Admin</h1>\n                <p className=\"lead font-italic text-left\">\n                  QUESTION - ANSWER TABLE\n                </p>\n                <hr className=\"my-4\" />\n                <div className=\"row d-flex align-items-center justify-content-center\">\n                  <div className=\"col-md-6\">\n                    <button type=\"button\" className=\"btn btn-dark col-md-12\">\n                      <span className=\"mr-2\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"20\"\n                          height=\"20\"\n                          fill=\"currentColor\"\n                          className=\"bi bi-list\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                          />\n                        </svg>\n                      </span>\n                      <span>List of unsatisfied questions</span>\n                    </button>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <Link to={\"./addnew\"}>\n                      {/* <a href=\"/addnew\" className=\"btn btn-outline-success\"> */}\n                      <i className=\"fas fa-plus\"></i> Add New Question\n                      {/* </a> */}\n                    </Link>\n                  </div>\n                </div>\n              </div>\n\n              {this.state.loading ? (\n                <div>Loading</div>\n              ) : (\n                <table className=\"table table-borderless table-hover text-left\">\n                  <thead className=\"border-bottom font-weight-bold\">\n                    <tr>\n                      <th>ID</th>\n                      <th>Question</th>\n                      <th>Answer</th>\n                      <th>Viewed Count</th>\n                      <th>Satisfied Count</th>\n                      <th>Unsatisfied Count</th>\n                      <th></th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.allrows.map((item, index) => (\n                      <tr key={`tr${index}`}>\n                        <td>{item.id}</td>\n                        <td>{item.question}</td>\n                        <td>{item.answer}</td>\n                        <td>{item.viewed}</td>\n                        <td>{item.satisfied}</td>\n                        <td>{item.unsatisfied}</td>\n                        <td>\n                          <button type=\"button\" className=\"AllQuestion_button\">\n                            <i className=\"far fa-edit fa-lg\"></i>\n                          </button>\n                        </td>\n                        <td>\n                          <button\n                            type=\"button\"\n                            className=\"AllQuestion_button\"\n                            onClick={() => this.handleDelete(item)}\n                          >\n                            <i className=\"far fa-trash-alt fa-lg text-danger float-right\"></i>\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          </div>\n          {this.state.gotError && !this.state.loading && (\n            <ShowError text={this.state.text} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { addNewQA, getAllQueTypes } from \"../Dataservice/DataService\";\nimport ShowError from \"../ErrorComponent/ShowError\";\nimport \"./NewQA.css\";\nexport default class NewQA extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      gotError: false,\n      errorText: \"\",\n      questypes: [],\n      question: \"\",\n      answer: \"\",\n      view: \"0\",\n      satisfied: \"0\",\n      unsatisfied: \"0\",\n      queType: \"\",\n    };\n  }\n  async componentDidMount() {\n    await getAllQueTypes()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            errorText: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            questypes: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorText: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  }\n  handleChange = (event) => {\n    event.preventDefault();\n    // let key = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    var formData = new FormData(e.target);\n    const data = {};\n    data[\"question\"] = formData.get(\"question\") || this.state.question;\n    data[\"answer\"] = formData.get(\"answer\") || this.state.answer;\n    data[\"queType\"] = formData.get(\"queType\") || this.state.queType;\n    data[\"view\"] = formData.get(\"view\") || this.state.view;\n    data[\"satisfied\"] = formData.get(\"satisfied\") || this.state.satisfied;\n    data[\"unsatisfied\"] = formData.get(\"unsatisfied\") || this.state.unsatisfied;\n    console.log(data);\n    addNewQA(data)\n      .then((result) => {\n        console.log(result.data);\n        if (result.data.error) {\n          alert(result.data.error);\n        } else if (result.data.message) {\n          console.log(result);\n          alert(result.data.message);\n          setTimeout(() => {\n            window.location.reload();\n          }, 2000);\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n    // window.location.reload();\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 offset-md-0 mt-5\">\n            <div className=\"jumbotron pb-4  \">\n              <h1 className=\"display-4 text-left\">Admin</h1>\n              <p className=\"lead font-italic text-left\">\n                QUESTION - ANSWER TABLE\n              </p>\n              <hr className=\"my-4\" />\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <h4>Add new question answer</h4>\n                </div>\n                <div className=\"col-6 d-flex justify-content-end align-items-end\">\n                  <a href=\"/\">\n                    <button type=\"button\" className=\"btn btn-light\">\n                      GO BACK\n                    </button>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          {this.state.gotError && !this.state.loading && (\n            <ShowError text={this.state.errorText} />\n          )}\n        </div>\n        <div className=\"row d-flex justify-content-center text-left \">\n          <div className=\"col-md-11 col-12 NewQA_Row mb-5\">\n            {this.state.loading ? (\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <label className=\"\" htmlFor=\"question\">\n                    Question*\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"question\"\n                    name=\"question\"\n                    onChange={this.handleChange}\n                    required\n                    aria-describedby=\"question\"\n                    placeholder=\"Enter Question\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"\" htmlFor=\"question\">\n                    Answer*\n                  </label>\n                  <textarea\n                    type=\"text\"\n                    required\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                    id=\"answer\"\n                    name=\"answer\"\n                    aria-describedby=\"answer\"\n                    placeholder=\"Enter Answer\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"\" htmlFor=\"question\">\n                    Viewed Count (default zero)\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    required\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                    id=\"view\"\n                    name=\"view\"\n                    aria-describedby=\"view\"\n                    defaultValue=\"0\"\n                    placeholder=\"Enter Viewed Count\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"\" htmlFor=\"question\">\n                    Unsatisfied Count (default zero)\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    required\n                    className=\"form-control\"\n                    id=\"unsatisfied\"\n                    onChange={this.handleChange}\n                    name=\"unsatisfied\"\n                    defaultValue=\"0\"\n                    aria-describedby=\"unsatisfied\"\n                    placeholder=\"Enter Unsatisfied Count\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"\" htmlFor=\"question\">\n                    Satisfied Count (default zero)\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    defaultValue=\"0\"\n                    className=\"form-control\"\n                    id=\"satisfied\"\n                    name=\"satisfied\"\n                    onChange={this.handleChange}\n                    required\n                    aria-describedby=\"satisfied\"\n                    placeholder=\"Enter Satisfied Count\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"queType\">Example select</label>\n                  <select\n                    required\n                    className=\"form-control\"\n                    name=\"queType\"\n                    onChange={this.handleChange}\n                    id=\"queType\"\n                  >\n                    <option value=\"\" selected disabled>\n                      Select Question Type\n                    </option>\n                    {this.state.questypes.map((item, index) => (\n                      <option key={item.id} value={item.typename}>\n                        {item.typename}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <button type=\"submit\" className=\"btn btn-success col-5\">\n                  <i class=\"fas fa-database\"></i> Submit\n                </button>\n                <a href=\"/\">\n                  <button type=\"button\" className=\"btn btn-light ml-5 col-3\">\n                    Cancel\n                  </button>\n                </a>\n              </form>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\nimport AllQuestions from \"./Components/AllQuestions/AllQuestions\";\nimport NewQA from \"./Components/NewQA/NewQA\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={AllQuestions} exact />\n          <Route path=\"/addnew\" component={NewQA} />\n          {/*  \n    <Route path=\"/aboutUs\" component={Aboutus} />\n    <Route path=\"/desk\" component={Desk} />\n    <Route\n      path=\"/statebranchofficials\"\n      component={StateBranchOfficials}\n    />\n    <Route path=\"/covid\" component={Covid} />\n    <Route path=\"/lifeMembershipForm\" component={LifeMemberShipForm} />\n    <Route path=\"/centralnews\" component={CentralNews} />\n    <Route path=\"/allnews\" component={AllNews} />\n\n     <Route path=\"/gallery\" component={Folders} /> \n    <Route path=\"/branchNews\" component={BranchNews} /> */}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}