{"version":3,"sources":["Components/Dataservice/DataService.js","Components/ErrorComponent/ShowError.js","Components/UpdateQA/UpdateQA.js","Components/AllQuestions/AllQuestions.js","Components/NewQA/NewQA.js","Components/UnSat/UnsatQ.js","App.js","reportWebVitals.js","index.js"],"names":["getAllQuestions","a","axios","get","then","response","console","log","catch","err","message","deleteQuestion","data","post","getAllQueTypes","addNewQA","delete_Unsat_Question","getUnsatisfiedQuestions","addNewQueType","editQA","countUnsat","deleteQtype","ShowError","props","state","errorText","text","className","role","this","type","data-dismiss","aria-label","aria-hidden","Component","UpdateQA","handleChange","event","preventDefault","setState","target","name","value","handleSubmit","e","formData","FormData","qa","question","answer","id","result","error","alert","setTimeout","reset","gotError","loading","questionNew","answerNew","isShow","isVisible","onSubmit","htmlFor","placeholder","onChange","aria-describedby","class","href","AllQuestions","handleDelete","item","sendData","window","confirm","location","reload","allrows","isAboutVisible","editItem","to","xmlns","width","height","fill","viewBox","fillRule","d","map","index","viewed","satisfied","unsatisfied","onClick","NewQA","queType","view","loadData","handleDeleteQtype","handleSubmitQueType","queTypeNew","questypes","countOfUnsat","required","min","defaultValue","selected","disabled","typename","style","color","count","UnsatQ","qid","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35eac2bc.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getAllQuestions = async () => {\n  return await axios\n    .get(\"/api/all\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n\nexport const deleteQuestion = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/delete\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const getAllQueTypes = async () => {\n  return await axios\n    .get(\"/api/all/quetype\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const addNewQA = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/addnew\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n\nexport const delete_Unsat_Question = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/deleteUnsat\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n\nexport const getUnsatisfiedQuestions = async () => {\n  return await axios\n    .get(\"/api/all/unsatQ\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const addNewQueType = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/addquesType\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const editQA = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/editqa\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n\nexport const countUnsat = async () => {\n  return await axios\n    .get(\"/api/all/countUnsat\")\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\nexport const deleteQtype = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"/api/all/deleteQtype\", data)\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return { message: \"Error. Please try again later.\" };\n    });\n};\n","import React, { Component } from \"react\";\n\nexport default class ShowError extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorText: this.props.text || \"\",\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"alert alert-warning alert-dismissible fade show\"\n        role=\"alert\"\n      >\n        <strong>{this.state.errorText}</strong>\n        <button\n          type=\"button\"\n          className=\"close\"\n          data-dismiss=\"alert\"\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { editQA } from \"../Dataservice/DataService\";\n\nexport default class UpdateQA extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      gotError: false,\n      errorText: \"\",\n      qa: this.props.qa,\n      questionNew: \"\",\n      answerNew: \"\",\n      isShow: this.props.isVisible,\n    };\n  }\n  handleChange = (event) => {\n    event.preventDefault();\n    // let key = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    var formData = new FormData(e.target);\n    const data = {};\n    data[\"questionNew\"] = formData.get(\"questionNew\") || this.state.qa.question;\n    data[\"answerNew\"] = formData.get(\"answerNew\") || this.state.qa.answer;\n    data[\"qid\"] = this.state.qa.id;\n    console.log(data);\n    editQA(data)\n      .then((result) => {\n        console.log(result.data);\n        if (result.data.error) {\n          alert(result.data.error);\n        } else if (result.data.message) {\n          console.log(result);\n          alert(result.data.message);\n          setTimeout(() => {\n            e.target.reset();\n          }, 1500);\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n    // window.location.reload();\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 offset-md-0 mt-5\">\n              <div className=\"jumbotron\">\n                <h1 className=\"display-4 text-left\">Admin</h1>\n                <p className=\"lead font-italic text-left\">\n                  Update QUESTION - ANSWER\n                </p>\n                <hr className=\"my-4\" />\n              </div>\n              <div className=\"row d-flex justify-content-center text-left \">\n                <div className=\"col-md-11 col-12 NewQA_Row mb-5\">\n                  <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                      <label className=\"\" htmlFor=\"question\">\n                        Question*\n                      </label>\n                      <input\n                        type=\"text\"\n                        placeholder={this.state.qa.question}\n                        className=\"form-control\"\n                        id=\"questionNew\"\n                        name=\"questionNew\"\n                        onChange={this.handleChange}\n                        aria-describedby=\"question\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label className=\"\" htmlFor=\"question\">\n                        Answer*\n                      </label>\n                      <textarea\n                        type=\"text\"\n                        placeholder={this.state.qa.answer}\n                        className=\"form-control\"\n                        onChange={this.handleChange}\n                        id=\"answerNew\"\n                        name=\"answerNew\"\n                        aria-describedby=\"answer\"\n                      />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-success col-5\">\n                      <i class=\"fas fa-database\"></i> Submit\n                    </button>\n                    <a href=\"/\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-light ml-5 col-3\"\n                      >\n                        Cancel/Back\n                      </button>\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { deleteQuestion, getAllQuestions } from \"../Dataservice/DataService\";\nimport ShowError from \"../ErrorComponent/ShowError\";\nimport \"./AllQuestion.css\";\nimport { Link } from \"react-router-dom\";\nimport UpdateQA from \"../UpdateQA/UpdateQA\";\nexport default class AllQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allrows: [],\n      loading: true,\n      gotError: false,\n      isAboutVisible: false,\n      text: \"\",\n      editItem: {},\n    };\n  }\n  async componentDidMount() {\n    await getAllQuestions()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            text: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          console.log(result.data);\n          this.setState({\n            loading: false,\n          });\n          this.setState({\n            allrows: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  }\n  handleDelete = (item) => {\n    // e.preventDefault();\n    let sendData = {\n      id: item.id,\n    };\n\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      deleteQuestion(sendData)\n        .then((result) => {\n          console.log(result.data);\n          if (result.data.error) {\n            alert(result.data.error);\n          } else if (result.data.message) {\n            console.log(result);\n            alert(result.data.message);\n            window.location.reload();\n          }\n        })\n        .catch((error) => {\n          this.setState({\n            text: \"Nextwork Error\",\n          });\n          this.setState({\n            gotError: true,\n          });\n        });\n    }\n  };\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <div className=\"container\">\n          {this.state.isAboutVisible ? (\n            <UpdateQA\n              qa={this.state.editItem}\n              isVisible={this.state.isAboutVisible}\n            />\n          ) : (\n            <div>\n              <div className=\"row\">\n                <div className=\"col-md-12 offset-md-0 mt-5\">\n                  <div className=\"jumbotron\">\n                    <h1 className=\"display-4 text-left\">Admin</h1>\n                    <p className=\"lead font-italic text-left\">\n                      QUESTION - ANSWER TABLE\n                    </p>\n                    <hr className=\"my-4\" />\n                    <div className=\"row d-flex align-items-center justify-content-center\">\n                      <div className=\"col-md-6\">\n                        <Link to={\"./unsatQ\"}>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-dark col-md-12\"\n                          >\n                            <span className=\"mr-2\">\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                width=\"20\"\n                                height=\"20\"\n                                fill=\"currentColor\"\n                                className=\"bi bi-list\"\n                                viewBox=\"0 0 16 16\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                                />\n                              </svg>\n                            </span>\n                            <span>List of unsatisfied questions</span>\n                          </button>\n                        </Link>\n                      </div>\n                      <div className=\"col-md-3\">\n                        <Link\n                          to={\"./addnew\"}\n                          className=\"btn btn-outline-success\"\n                        >\n                          {/* <a href=\"/addnew\" className=\"btn btn-outline-success\"> */}\n                          <i className=\"fas fa-plus\"></i> Add New Question\n                          {/* </a> */}\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n\n                  {this.state.loading ? (\n                    <div>Loading</div>\n                  ) : (\n                    <table className=\"table table-sm  table-responsive-sm table-borderless table-hover text-left\">\n                      <thead className=\"border-bottom font-weight-bold\">\n                        <tr>\n                          <th>ID</th>\n                          <th>Question</th>\n                          <th>Answer</th>\n                          <th>Viewed Count</th>\n                          <th>Satisfied Count</th>\n                          <th>Unsatisfied Count</th>\n                          <th></th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.allrows.map((item, index) => (\n                          <tr key={`tr${index}`}>\n                            <td>{item.id}</td>\n                            <td>{item.question}</td>\n                            <td>{item.answer}</td>\n                            <td>{item.viewed}</td>\n                            <td>{item.satisfied}</td>\n                            <td>{item.unsatisfied}</td>\n                            <td>\n                              <button\n                                type=\"button\"\n                                onClick={() => {\n                                  this.setState({ isAboutVisible: true });\n                                  this.setState({\n                                    editItem: item,\n                                  });\n                                }}\n                                className=\"AllQuestion_button\"\n                              >\n                                <i className=\"far fa-edit fa-lg\"></i>\n                              </button>\n                            </td>\n                            <td>\n                              <button\n                                type=\"button\"\n                                className=\"AllQuestion_button\"\n                                onClick={() => this.handleDelete(item)}\n                              >\n                                <i className=\"far fa-trash-alt fa-lg text-danger float-right\"></i>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  )}\n                </div>\n              </div>\n              {this.state.gotError && !this.state.loading && (\n                <ShowError text={this.state.text} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  addNewQA,\n  addNewQueType,\n  countUnsat,\n  deleteQtype,\n  getAllQueTypes,\n} from \"../Dataservice/DataService\";\nimport ShowError from \"../ErrorComponent/ShowError\";\nimport \"./NewQA.css\";\nexport default class NewQA extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      gotError: false,\n      errorText: \"\",\n      questypes: [],\n      question: \"\",\n      answer: \"\",\n      view: \"0\",\n      satisfied: \"0\",\n      unsatisfied: \"0\",\n      queType: \"\",\n      queTypeNew: \"\",\n      countOfUnsat: [],\n    };\n  }\n  async loadData() {\n    await getAllQueTypes()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            errorText: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            questypes: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorText: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n    await countUnsat()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            errorText: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            countOfUnsat: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          errorText: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  }\n  componentDidMount() {\n    this.loadData();\n  }\n  handleChange = (event) => {\n    event.preventDefault();\n    // let key = event.target.name;\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    var formData = new FormData(e.target);\n    const data = {};\n    data[\"question\"] = formData.get(\"question\") || this.state.question;\n    data[\"answer\"] = formData.get(\"answer\") || this.state.answer;\n    data[\"queType\"] = formData.get(\"queType\") || this.state.queType;\n    data[\"view\"] = formData.get(\"view\") || this.state.view;\n    data[\"satisfied\"] = formData.get(\"satisfied\") || this.state.satisfied;\n    data[\"unsatisfied\"] = formData.get(\"unsatisfied\") || this.state.unsatisfied;\n    console.log(data);\n    addNewQA(data)\n      .then((result) => {\n        console.log(result.data);\n        if (result.data.error) {\n          alert(result.data.error);\n        } else if (result.data.message) {\n          console.log(result);\n          alert(result.data.message);\n          setTimeout(() => {\n            this.loadData();\n            e.target.reset();\n          }, 2000);\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n    // window.location.reload();\n  };\n  handleDeleteQtype = (item) => {\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      deleteQtype(item)\n        .then((result) => {\n          console.log(result.data);\n          if (result.data.error) {\n            alert(result.data.error);\n          } else if (result.data.message) {\n            console.log(result);\n            alert(result.data.message);\n            this.loadData();\n          }\n        })\n        .catch((error) => {\n          this.setState({\n            text: \"Nextwork Error\",\n          });\n          this.setState({\n            gotError: true,\n          });\n        });\n    }\n  };\n  handleSubmitQueType = (e) => {\n    e.preventDefault();\n    var formData = new FormData(e.target);\n    const data = {};\n    data[\"queTypeNew\"] = formData.get(\"queTypeNew\") || this.state.queTypeNew;\n    addNewQueType(data)\n      .then((result) => {\n        console.log(result.data);\n        if (result.data.error) {\n          alert(result.data.error);\n        } else if (result.data.message) {\n          console.log(result);\n          alert(result.data.message);\n          setTimeout(() => {\n            this.loadData();\n            e.target.reset();\n          }, 1500);\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 offset-md-0 mt-5\">\n            <div className=\"jumbotron pb-4  \">\n              <h1 className=\"display-4 text-left\">Admin</h1>\n              <p className=\"lead font-italic text-left\">\n                QUESTION - ANSWER TABLE\n              </p>\n              <hr className=\"my-4\" />\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <h4>Add new question answer</h4>\n                </div>\n                <div className=\"col-6 d-flex justify-content-end align-items-end\">\n                  <a href=\"/\">\n                    <button type=\"button\" className=\"btn btn-light\">\n                      GO BACK\n                    </button>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          {this.state.gotError && !this.state.loading && (\n            <ShowError text={this.state.errorText} />\n          )}\n        </div>\n        <div className=\"row d-flex justify-content-center text-left \">\n          <div className=\"col-md-11 col-12 NewQA_Row mb-5\">\n            {this.state.loading ? (\n              <div>\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"question\">\n                      Question*\n                      <p className=\"m-0 p-0\">\n                        <small>Cannot contain ' or \"</small>\n                      </p>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"question\"\n                      name=\"question\"\n                      onChange={this.handleChange}\n                      required\n                      aria-describedby=\"question\"\n                      placeholder=\"Enter Question\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"question\">\n                      Answer*\n                      <p className=\"m-0 p-0\">\n                        <small>Cannot contain ' or \"</small>\n                      </p>\n                    </label>\n                    <textarea\n                      type=\"text\"\n                      required\n                      className=\"form-control\"\n                      onChange={this.handleChange}\n                      id=\"answer\"\n                      name=\"answer\"\n                      aria-describedby=\"answer\"\n                      placeholder=\"Enter Answer\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"question\">\n                      Viewed Count (default zero)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      required\n                      className=\"form-control\"\n                      onChange={this.handleChange}\n                      id=\"view\"\n                      name=\"view\"\n                      aria-describedby=\"view\"\n                      defaultValue=\"0\"\n                      placeholder=\"Enter Viewed Count\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"question\">\n                      Unsatisfied Count (default zero)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      required\n                      className=\"form-control\"\n                      id=\"unsatisfied\"\n                      onChange={this.handleChange}\n                      name=\"unsatisfied\"\n                      defaultValue=\"0\"\n                      aria-describedby=\"unsatisfied\"\n                      placeholder=\"Enter Unsatisfied Count\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"question\">\n                      Satisfied Count (default zero)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      defaultValue=\"0\"\n                      className=\"form-control\"\n                      id=\"satisfied\"\n                      name=\"satisfied\"\n                      onChange={this.handleChange}\n                      required\n                      aria-describedby=\"satisfied\"\n                      placeholder=\"Enter Satisfied Count\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"queType\">Example select</label>\n                    <p className=\"p-0 m-0\">\n                      <small>\n                        If you do not find question type add a new one.\n                      </small>\n                    </p>\n                    <select\n                      required\n                      className=\"form-control\"\n                      name=\"queType\"\n                      onChange={this.handleChange}\n                      id=\"queType\"\n                    >\n                      <option value=\"\" selected disabled>\n                        Select Question Type\n                      </option>\n                      {this.state.questypes.map((item, index) => (\n                        <option key={item.id} value={item.typename}>\n                          {item.typename}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-success col-5\">\n                    <i class=\"fas fa-database\"></i> Submit\n                  </button>\n                  <a href=\"/\">\n                    <button type=\"button\" className=\"btn btn-light ml-5 col-3\">\n                      Cancel/Back\n                    </button>\n                  </a>\n                </form>\n                <hr className=\"NewQA_hr\" />\n                <h5>Current question types</h5>\n                <small style={{ color: \"red\" }}>\n                  Deleting question type will delete related questions from\n                  database\n                </small>\n                <table className=\"table  table-sm  table-responsive-sm table-borderless table-hover text-left\">\n                  <thead className=\"border-bottom font-weight-bold\">\n                    <tr>\n                      <th>Question Type</th>\n                      <th>Count of question in database</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.countOfUnsat.map((item, index) => (\n                      <tr key={`tr${index}`}>\n                        <td>{item.typename}</td>\n                        <td>{item.count}</td>{\" \"}\n                        <td>\n                          <button\n                            type=\"button\"\n                            className=\"AllQuestion_button\"\n                            onClick={() => this.handleDeleteQtype(item)}\n                          >\n                            <i className=\"far fa-trash-alt fa-lg text-danger float-right\"></i>\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <hr className=\"NewQA_hr\" />\n\n                <h5>Add new question type</h5>\n                <form onSubmit={this.handleSubmitQueType}>\n                  <div className=\"form-group\">\n                    <label className=\"\" htmlFor=\"questionType\">\n                      Question Type\n                      <p className=\"m-0 p-0\">\n                        <small>Cannot contain ' or \"</small>\n                      </p>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"queTypeNew\"\n                      name=\"queTypeNew\"\n                      onChange={this.handleChange}\n                      required\n                      aria-describedby=\"questionType\"\n                      placeholder=\"Enter Question Type\"\n                    />\n                  </div>\n                  <button type=\"sumbit\" className=\"btn btn-success \">\n                    ADD\n                  </button>\n                </form>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./UnsatQ.css\";\nimport {\n  delete_Unsat_Question,\n  getUnsatisfiedQuestions,\n} from \"../Dataservice/DataService\";\nimport ShowError from \"../ErrorComponent/ShowError\";\n\nexport default class UnsatQ extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allrows: [],\n      loading: true,\n      gotError: false,\n      text: \"\",\n    };\n  }\n  async loadData() {\n    await getUnsatisfiedQuestions()\n      .then((result) => {\n        if (result.message) {\n          console.log(result);\n          this.setState({\n            text: result.message,\n          });\n          this.setState({\n            gotError: true,\n          });\n          this.setState({\n            loading: false,\n          });\n        } else {\n          console.log(result.data);\n          this.setState({\n            loading: false,\n          });\n          this.setState({\n            allrows: result.data,\n          });\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          text: \"Nextwork Error\",\n        });\n        this.setState({\n          gotError: true,\n        });\n      });\n  }\n  componentDidMount() {\n    this.loadData();\n  }\n\n  handleDelete = (item) => {\n    // e.preventDefault();\n    let sendData = {\n      id: item.id,\n    };\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      delete_Unsat_Question(sendData)\n        .then((result) => {\n          console.log(result.data);\n          if (result.data.error) {\n            alert(result.data.error);\n          } else if (result.data.message) {\n            console.log(result);\n            alert(result.data.message);\n            setTimeout(() => {\n              this.loadData();\n            }, 1500);\n          }\n        })\n        .catch((error) => {\n          this.setState({\n            text: \"Nextwork Error\",\n          });\n          this.setState({\n            gotError: true,\n          });\n        });\n      // window.location.reload();\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {\" \"}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 offset-md-0 mt-5\">\n                <div className=\"jumbotron\">\n                  <h1 className=\"display-4 text-left\">Admin</h1>\n                  <p className=\"lead font-italic text-left\">\n                    UNSATISFIED QUESTION - ANSWER TABLE\n                  </p>\n                  <hr className=\"my-4\" />\n                  <div className=\"row d-flex align-items-center justify-content-center\">\n                    <div className=\"col-md-6\">\n                      <a href=\"/\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-dark col-md-12\"\n                        >\n                          <span className=\"mr-2\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"20\"\n                              height=\"20\"\n                              fill=\"currentColor\"\n                              className=\"bi bi-list\"\n                              viewBox=\"0 0 16 16\"\n                            >\n                              <path\n                                fillRule=\"evenodd\"\n                                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n                              />\n                            </svg>\n                          </span>\n                          <span>List of all questions</span>\n                        </button>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                {this.state.loading ? (\n                  <div>Loading</div>\n                ) : (\n                  <table className=\"table table-sm  table-responsive-sm table-borderless table-hover text-left\">\n                    <thead className=\"border-bottom font-weight-bold\">\n                      <tr>\n                        <th>ID</th>\n                        <th>Question</th>\n                        <th>AnswerID</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.allrows.map((item, index) => (\n                        <tr key={`tr${index}`}>\n                          <td>{item.id}</td>\n                          <td>{item.question}</td>\n                          <td>{item.qid}</td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              className=\"UnsatQ_button\"\n                              onClick={() => this.handleDelete(item)}\n                            >\n                              <i className=\"far fa-trash-alt fa-lg text-danger float-right\"></i>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                )}\n              </div>\n            </div>\n            {this.state.gotError && !this.state.loading && (\n              <ShowError text={this.state.text} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\nimport AllQuestions from \"./Components/AllQuestions/AllQuestions\";\nimport NewQA from \"./Components/NewQA/NewQA\";\nimport UnsatQ from \"./Components/UnSat/UnsatQ\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={AllQuestions} exact />\n          <Route path=\"/addnew\" component={NewQA} />\n\n          <Route path=\"/unsatQ\" component={UnsatQ} />\n          {/*  \n    <Route path=\"/aboutUs\" component={Aboutus} />\n    <Route path=\"/desk\" component={Desk} />\n    <Route\n      path=\"/statebranchofficials\"\n      component={StateBranchOfficials}\n    />\n    <Route path=\"/covid\" component={Covid} />\n    <Route path=\"/lifeMembershipForm\" component={LifeMemberShipForm} />\n    <Route path=\"/centralnews\" component={CentralNews} />\n    <Route path=\"/allnews\" component={AllNews} />\n\n     <Route path=\"/gallery\" component={Folders} /> \n    <Route path=\"/branchNews\" component={BranchNews} /> */}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}